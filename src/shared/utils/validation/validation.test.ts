import { emailValidation, passwordValidation } from './validation.ts'

describe('emailValidation', () => {
  test('valid email address', () => {
    expect(emailValidation('user@example.com')).toBe(true)
    expect(emailValidation('user.name+tag@example.co.uk')).toBe(true)
    expect(emailValidation('user_name@example.org')).toBe(true)
    expect(emailValidation('user-name@example.com')).toBe(true)
    expect(emailValidation('user123@example.net')).toBe(true)
    expect(emailValidation('user_123@exam.ru')).toBe(true)
  })
  test('invalid email addresses', () => {
    expect(emailValidation('user@.com')).toBe(false)
    expect(emailValidation('user@gmail. com')).toBe(false)
    expect(emailValidation('user@com')).toBe(false)
    expect(emailValidation('user@com.')).toBe(false)
    expect(emailValidation('user@example.c')).toBe(false)
    expect(emailValidation('user@.com.')).toBe(false)
    expect(emailValidation('user@com.1')).toBe(false)
    expect(emailValidation('userexample.com')).toBe(false)
    expect(emailValidation('user@ example.com')).toBe(false)
    expect(emailValidation(' user@example.com')).toBe(false)
    expect(emailValidation('user@example.com ')).toBe(false)
    expect(emailValidation('')).toBe(false)
    expect(emailValidation('user@')).toBe(false)
    expect(emailValidation(' user@')).toBe(false)
    expect(emailValidation(' user@ ')).toBe(false)
    expect(emailValidation(' user@ ')).toBe(false)
  })
})

describe('passwordValidation', () => {
  test('valid password', () => {
    expect(passwordValidation('aEr23trfg')).toBe(true)
    expect(passwordValidation('Password1')).toBe(true)
    expect(passwordValidation('ValidPass123')).toBe(true)
    expect(passwordValidation('StrongPass!4')).toBe(true)
    expect(passwordValidation('NoSpaces1')).toBe(true)
  })
  test('invalid password', () => {
    expect(passwordValidation('a')).toBe(false)
    expect(passwordValidation('short1')).toBe(false)
    expect(passwordValidation('NoDigits')).toBe(false)
    expect(passwordValidation('12345678')).toBe(false)
    expect(passwordValidation('NOLOWERCASE1')).toBe(false)
    expect(passwordValidation('nouppercase1')).toBe(false)
    expect(passwordValidation('Spaces NotAllowed1')).toBe(false)
    expect(passwordValidation('')).toBe(false)
    expect(passwordValidation(' ')).toBe(false)
    expect(passwordValidation('Password ')).toBe(false)
    expect(passwordValidation(' Password1')).toBe(false)
    expect(passwordValidation(' Password1 ')).toBe(false)
    expect(passwordValidation('Password1 ')).toBe(false)
  })
})
